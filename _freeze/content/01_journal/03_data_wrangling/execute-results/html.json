{
  "hash": "3f4e0f88320f8dfe1904a87dfd967731",
  "result": {
    "markdown": "---\ntitle: \"Data Wrangling\"\nauthor: \"Jamila Rzaayeva\"\n---\n\n# Solution\n\n## Load libraries\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-1_dab83e3f6969409ec97d4ce6f83471cf'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(vroom)\nlibrary(data.table)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'data.table'\n#> \n#> The following objects are masked from 'package:lubridate':\n#> \n#>     hour, isoweek, mday, minute, month, quarter, second, wday, week,\n#>     yday, year\n#> \n#> The following objects are masked from 'package:dplyr':\n#> \n#>     between, first, last\n#> \n#> The following object is masked from 'package:purrr':\n#> \n#>     transpose\n```\n:::\n:::\n\n\n## Set column types\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-2_c61debee7cda3b07619269e3168adcf4'}\n\n```{.r .cell-code}\ncol_types <- list(\n  id = col_character(),\n  type = col_character(),\n  number = col_character(),\n  country = col_character(),\n  date = col_date(\"%Y-%m-%d\"),\n  abstract = col_character(),\n  title = col_character(),\n  kind = col_character(),\n  num_claims = col_double(),\n  filename = col_character(),\n  withdrawn = col_double()\n)\n```\n:::\n\n\n## Load tables\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-3_22da5e8627470406f3760797a808412d'}\n\n```{.r .cell-code}\npatent_tb1 <- vroom(\n  file       = '../../Patent_data_reduced/patent.tsv', \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: The following named parsers don't match the column names: type,\n#> number, country, abstract, title, kind, filename, withdrawn\n```\n:::\n\n```{.r .cell-code}\nassignee_tb1 <- vroom(\n  file       = '../../Patent_data_reduced/assignee.tsv', \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: The following named parsers don't match the column names: number,\n#> country, date, abstract, title, kind, num_claims, filename, withdrawn\n```\n:::\n\n```{.r .cell-code}\npatent_assignee_tb1 <- vroom(\n  file       = '../../Patent_data_reduced/patent_assignee.tsv', \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: The following named parsers don't match the column names: id, type,\n#> number, country, date, abstract, title, kind, num_claims, filename, withdrawn\n```\n:::\n\n```{.r .cell-code}\nuspc_tb1 <- vroom(\n  file       = '../../Patent_data_reduced/uspc.tsv', \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")) %>%\n  transform(patent_id = as.character(patent_id))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: The following named parsers don't match the column names: id, type,\n#> number, country, date, abstract, title, kind, num_claims, filename, withdrawn\n```\n:::\n:::\n\n\n## Wrangle tables\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-4_374d877a619b93900c6f2e41e7ce0f80'}\n\n```{.r .cell-code}\nwrangled <- assignee_tb1 %>%\n  left_join(patent_assignee_tb1, by = c(\"id\" = \"assignee_id\")) %>%\n  left_join(patent_tb1, by = c(\"patent_id\" = \"id\")) %>%\n  left_join(uspc_tb1, by = \"patent_id\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning in left_join(., uspc_tb1, by = \"patent_id\"): Detected an unexpected many-to-many relationship between `x` and `y`.\n#> ℹ Row 1 of `x` matches multiple rows in `y`.\n#> ℹ Row 376875 of `y` matches multiple rows in `x`.\n#> ℹ If a many-to-many relationship is expected, set `relationship =\n#>   \"many-to-many\"` to silence this warning.\n```\n:::\n:::\n\n\n# Question 1\n\n## Get patent leaders\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-5_0639fd3cf17d00ed582688bf2778d4b6'}\n\n```{.r .cell-code}\npatent_leaders <- sort(table(wrangled$organization), decreasing=T)[1:10] %>%\n  as.data.frame() %>%\n  mutate(Var1 = Var1 %>% str_to_title())\n```\n:::\n\n\n## Display patent leaders in table\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-6_2a71a3ccf28c4c313ec8a7c47afb2e60'}\n\n```{.r .cell-code}\ndata.table(\n  \"Organization\" = patent_leaders$Var1,\n  \"No. of patents (2014)\" = patent_leaders$Freq)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Organization\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"No. of patents (2014)\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"International Business Machines Corporation\",\"2\":\"20669\"},{\"1\":\"Samsung Electronics Co., Ltd.\",\"2\":\"16002\"},{\"1\":\"Canon Kabushiki Kaisha\",\"2\":\"10276\"},{\"1\":\"Sony Corporation\",\"2\":\"9022\"},{\"1\":\"Microsoft Corporation\",\"2\":\"8113\"},{\"1\":\"Qualcomm Incorporated\",\"2\":\"7814\"},{\"1\":\"Kabushiki Kaisha Toshiba\",\"2\":\"7440\"},{\"1\":\"Google Inc.\",\"2\":\"6815\"},{\"1\":\"Lg Electronics Inc.\",\"2\":\"6292\"},{\"1\":\"Panasonic Corporation\",\"2\":\"6097\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n# Question 2\n\n## Get August wrangled table\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-7_dc6735abc07a44183af084958b79b3f0'}\n\n```{.r .cell-code}\nwrangled_august <- wrangled %>% \n  select(organization, date) %>%\n  filter(date >= \"2014-08-01\" & date <= \"2014-08-31\")\n```\n:::\n\n\n## Get August patent leaders\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-8_91f4ab289218b915e7ef826510f32df2'}\n\n```{.r .cell-code}\npatent_leaders_august <- sort(table(wrangled_august$organization), decreasing=T)[1:10] %>%\n  as.data.frame() %>%\n  mutate(Var1 = Var1 %>% str_to_title())\n```\n:::\n\n\n## Display August patent leaders in table\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-9_14484924c200e0280deb8f143ec2a072'}\n\n```{.r .cell-code}\ndata.table(\n  \"Organization\" = patent_leaders_august$Var1,\n  \"No. of patents (August 2014)\" = patent_leaders_august$Freq)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Organization\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"No. of patents (August 2014)\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"International Business Machines Corporation\",\"2\":\"1990\"},{\"1\":\"Samsung Electronics Co., Ltd.\",\"2\":\"1361\"},{\"1\":\"Microsoft Corporation\",\"2\":\"876\"},{\"1\":\"Canon Kabushiki Kaisha\",\"2\":\"854\"},{\"1\":\"Sony Corporation\",\"2\":\"666\"},{\"1\":\"Qualcomm Incorporated\",\"2\":\"639\"},{\"1\":\"Google Inc.\",\"2\":\"627\"},{\"1\":\"Kabushiki Kaisha Toshiba\",\"2\":\"584\"},{\"1\":\"Apple Inc.\",\"2\":\"568\"},{\"1\":\"Hon Hai Precision Industry Co., Ltd.\",\"2\":\"546\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n# Question 3\n\n## Get class wrangled table\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-10_c623ecf5ae7bad0b86e3d1642d82817c'}\n\n```{.r .cell-code}\nwrangled_class <- wrangled %>%\n  select(organization, mainclass_id) %>%\n  filter(organization %in% patent_leaders$Var1[1:10]) %>% \n  subset(mainclass_id != \"No longer published\")\n```\n:::\n\n\n## Get class patent leaders\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-11_46fbfb19802c9945d529d2681dad3e64'}\n\n```{.r .cell-code}\nclass_leaders <- sort(table(wrangled_class$mainclass_id), decreasing=T)[1:5] %>% \n  as.data.frame() %>%\n  mutate(Var1 = Var1 %>% str_to_title())\n```\n:::\n\n\n## Display class patent leaders in table\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-12_57cf6d1ba294678becd7518f1da538ee'}\n\n```{.r .cell-code}\ndata.table(\n  \"USPTO tech main class (id since can't find name) for top 10 companies (US since can't find worldwide)\" = class_leaders$Var1,\n  \"No. of patents (2014)\" = class_leaders$Freq)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"USPTO tech main class (id since can't find name) for top 10 companies (US since can't find worldwide)\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"No. of patents (2014)\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"257\",\"2\":\"7710\"},{\"1\":\"438\",\"2\":\"3911\"},{\"1\":\"348\",\"2\":\"3848\"},{\"1\":\"709\",\"2\":\"3678\"},{\"1\":\"707\",\"2\":\"3089\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}